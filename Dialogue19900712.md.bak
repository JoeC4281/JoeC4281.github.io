# TechNotes - Dialogue
July 1990<br>
Page 12
### Questions and Answers

### Getting Carried Away
Q: I was using the **Carry forward** option on some fields within my format file but then decided that I didn't want them to do so. So I modified the format file and turned off that option on the fields I had previousy set. After saving, I returned to the Control Center and proceeded to append. The fields were still carried foward. I had to exit dBASE IV and return before I could get the fields to stop carrying. What happened?

A: The SET CARRY command is an *additive* command. So when the new format file issues the SET CARRY command for the new set of fields, it did not clear the previous ones from memory, only adding to the list. Exiting and returning to DBASE IV cleared this setting. However, closing the .dbf should do the trick. If you are at the dot prompt, you could enter the command SET CARRY TO at the dot prompt to clear the setting. Going to the ***Tools:Settings*** menu to turn the Carry setting OFF will not be sufficient.

### Traceback Info
Q: While in the Debugger, pressing a P will show the program traceback information. Is there a command to display the same information which can be typed at the dot prompt? (When this happens during the debug process, most of that information gets overlaid by any existing windows or popups.)

A: Unfortunately, there is not a command to show the traceback info from the dot prompt and continue running the programs. The info is shown if you do a cancel, but as you mentioned, it can get overwritten depending upon elements affecting the current screen. Furthermore, attempts we made to route traceback information to a text file by triggering a SET PRINT TO FILE via an ON ESCAPE or ON ERROR command provided unsatisfactory results.

### Variable Naming Conventions In an .FRG File
Q: I am delving into the modification of an .frg file and am confused by some of the variables created and used there. Could you shed any light on naming conventions and their origin?

A: The list is quite extensive and beyond the scope of this section. However, there is a methodology you should be familiar with when delving into the code files of labels, reports and formats.

The first letter in the name of the variable is either g or l for global (public) or local (private). The second letter is the data type of the variable: c,n,d,f,l. The third character is always an underscore. From there on, if you;re good with mnemonics, you might decipher the rest of the variable name.

If you're designing your own application or modifying an existing .frg file, you might consider using other memory elements as well, such as a for array, w for window, and so on, keeping in form with the naming structures used.

### Pass the Variables, Please
Q: Is it possible to pass a parameter to a program from the DOS level by entering

`DBASE <prog name> WITH <parameter>`

A: With the syntax you provided, the answer is no. However, there is a way of parameter passing from DOS into dBASE IV. By making use of DOS environment variables, a simple DOS batch file, and the GETENV() function in dBASE IV, you can easily pass parameters to a dBASE III PLUS or dBASE IV program.


